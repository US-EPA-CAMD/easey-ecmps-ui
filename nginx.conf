worker_processes 1;
daemon off;

error_log stderr;
events { 
  worker_connections 1024; 
}

http {
  charset utf-8;
  log_format cloudfoundry 'NginxLog "$request" $status $body_bytes_sent';
  access_log /dev/stdout cloudfoundry;
  default_type application/octet-stream;
  include mime.types;
  sendfile on;

  tcp_nopush on;
  keepalive_timeout 30;

  # Ensure that redirects don't include the internal container PORT - 8080
  port_in_redirect off;

  server {
    listen {{port}};
    root   build;
    index index.html index.htm;
    try_files $uri /index.html;

    error_page 404 /error404.html;

    # Only use TLS v1.2 as Transport Security Protocol
    ssl_protocols TLSv1.2;
    
    # Only use ciphersuites that are considered modern and secure by Mozilla
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';

    # Do not let attackers downgrade the ciphersuites. Always use server-side offered ciphersuites
    ssl_prefer_server_ciphers on;

    # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
    add_header Strict-Transport-Security max-age=15768000;

    location /dev {
      return 404;
    }

    location /test {
      return 404;
    }

    location / {
      try_files $uri /index.html;
    }
  }
}
